name:  Continuous Integration

on:
  push:
    branches:
      - master
    paths-ignore:
      - '*.txt'
      - '*.pdf'
      - '**.md'
  pull_request:
    branches:
      - master

env:
  TestMeetingOrganiserDesktopApp_Project_Path: TestMeetingOrganiserDesktopApp\TestMeetingOrganiserDesktopApp.csproj
  TestServicesForDesktopApp_Project_Path: TestServicesForDesktopApp\TestServicesForDesktopApp.csproj
  TestWebAppForMembers_Project_Path: TestWebAppForMembers\TestWebAppForMembers.csproj
  MeetingOrganiserDesktopApp_Project_Path: MeetingOrganiserDesktopApp\MeetingOrganiserDesktopApp.csproj
  ServicesForDesktopApp_Project_Path: ServicesForDesktopApp\ServicesForDesktopApp.csproj
  WebAppForMembers_Project_Path: WebAppForMembers\WebAppForMembers.csproj
  MeetingOrganiserDesktopApp_Folder: MeetingOrganiserDesktopApp
  ServicesForDesktopApp_Project_Folder: ServicesForDesktopApp
  WebAppForMembers_Project_Folder: WebAppForMembers
  DotnetVersion: '3.1.x'
  Platform: 'win-x64'
  MeetingOrganiserDesktopApp_PublishFolder: ${{env.MeetingOrganiserDesktopApp_Folder_Path}}/bin/Release/netcoreapp3.1/${{Platform}}/publish
  ServicesForDesktopApp_PublishFolder: ${{env.ServicesForDesktopApp}}/bin/Release/netcoreapp3.1/${{Platform}}/publish
  WebAppForMembers_PublishFolder: ${{env.WebAppForMembers_Project_Folder}}/bin/Release/netcoreapp3.1/${{Platform}}/publish

jobs:

  setup:
    name: Compute Changes
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - shell: pwsh
        id: determine_testsuite # Step will be referenced later
        run: |
          $diff = git diff --name-only HEAD^ HEAD
          $SourceDiff = $diff | Where-Object { $_ -match '^CommonData/' -or $_ -match '^.github/workflows/' -or $_ -match '^.github/workflows/'}
          $HasCommonDiff = $SourceDiff.Length -gt 0
          $MustTestDesktopApp = $HasCommonDiff
          $MustRunIntegrationTestsForServicesForDesktopApp = $HasCommonDiff
          $MustTestWebAppForMembers = $HasCommonDiff
          $MustReleaseServicesForDesktopApp = $HasCommonDiff
          
          if (-not $HasCommonDiff){
            $SourceDiff = $diff | Where-Object { $_ -match '^${{env.MeetingOrganiserDesktopApp_Folder}}/'}
            $MustTestDesktopApp = $SourceDiff.Length -gt 0
            $MustRunIntegrationTestsForServicesForDesktopApp = $MustTestDesktopApp
            
            if (-not $MustTestDesktopApp){
              $SourceDiff = $diff | Where-Object { $_ -match '^Test${{env.MeetingOrganiserDesktopApp_Folder}}'}
              $MustTestDesktopApp = $SourceDiff.Length -gt 0
  
              $SourceDiff = $diff | Where-Object { $_ -match '^${{env.ServicesForDesktopApp_Project_Folder}}/' -or $_ -match '^Test${{env.ServicesForDesktopApp_Project_Folder}}/'}
              $MustRunIntegrationTestsForServicesForDesktopApp = $SourceDiff.Length -gt 0
            }
          
            $SourceDiff = $diff | Where-Object { $_ -match '^${{env.WebAppForMembers_Project_Folder}}/' -or $_ -match '^Test${{env.WebAppForMembers_Project_Folder}}/'}
            $MustTestWebAppForMembers = $SourceDiff.Length -gt 0
          }
          echo "test_desktop_app=$MustTestDesktopApp" >> "$GITHUB_OUTPUT"
          echo "::set-output name=run_integration_tests_for_services_for_desktop_app::$MustRunIntegrationTestsForServicesForDesktopApp"
          echo "::set-output name=test_web_app::$MustTestWebAppForMembers"
          echo "::set-output name=release_services_for_desktop_app::$MustReleaseServicesForDesktopApp"
          

  unit_test_and_deploy_desktop_app:
    name: Unit Test Desktop App
    needs:
      - setup
    if: $${{needs.setup.steps.determine_testsuite.outputs.test_desktop_app == 'True'}}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DotnetVersion}}
      - name: Execute Unit Tests
        run: dotnet test ${{env.TestMeetingOrganiserDesktopApp_Project_Path}}
      - run: dotnet restore ${{ env.MeetingOrganiserDesktopApp_Project_Path }}
      - run: dotnet build ${{ env.MeetingOrganiserDesktopApp_Project_Path }} -c Release --no-restore
      - run: dotnet publish ${{ env.MeetingOrganiserDesktopApp_Project_Path }} -c Release --self-contained -r ${{Platform}} -p:PublishSingleFile=true --no-build
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      - uses: csexton/release-asset-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: $${{env.MeetingOrganiserDesktopApp_PublishFolder}}/*.exe
          release-url: ${{ steps.create_release.outputs.upload_url }}

  deploy_services_for_desktop_app:
    name: Deploy Services for Desktop App
    needs:
      - setup
    if: $${{needs.setup.steps.determine_testsuite.outputs.release_services_for_desktop_app == 'True'}}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DotnetVersion}}
      - run: dotnet restore ${{ env.ServicesForDesktopApp_Project_Path }}
      - run: dotnet build ${{ env.ServicesForDesktopApp_Project_Path }} -c Release --no-restore
      - run: dotnet publish ${{ env.ServicesForDesktopApp_Project_Path }} -c Release --self-contained -r ${{Platform}} -p:PublishSingleFile=true --no-build
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      - uses: csexton/release-asset-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: ${{env.ServicesForDesktopApp_PublishFolder}}/*.exe
          release-url: ${{ steps.create_release.outputs.upload_url }}

  integration_test_desktop_app_and_services:
    name: Integration Test Desktop App with Services
    needs:
      - setup
    if: $${{needs.setup.steps.determine_testsuite.outputs.run_integration_tests_for_services_for_desktop_app == 'True'}}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DotnetVersion}}
      - name: Execute Integration Tests
        run: dotnet test ${{env.TestServicesForDesktopApp_Project_Path}}

  unit_test_and_deploy_web_app:
    name: Test Web App
    needs:
      - setup
    if: $${{needs.setup.steps.determine_testsuite.outputs.test_web_app == 'True'}}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DotnetVersion}}
      - name: Execute Unit Tests
        run: dotnet test ${{env.TestWebAppForMembers_Project_Path}}
      - run: dotnet restore ${{ env.WebAppForMembers_Project_Path }}
      - run: dotnet build ${{ env.WebAppForMembers_Project_Path }} -c Release --no-restore
      - run: dotnet publish ${{ env.WebAppForMembers_Project_Path }} -c Release --self-contained -r ${{Platform}} -p:PublishSingleFile=true --no-build
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      - uses: csexton/release-asset-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: ${{env.WebAppForMembers_PublishFolder}}/*.exe
          release-url: ${{ steps.create_release.outputs.upload_url }}
